apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

/// Modify this variable to build the desired architectures.
String[] architectures = [
        'armeabi-v7a',
        'x86'
]

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    flavorDimensions 'screenSize'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27

        applicationId 'com.ee.test.android'
        versionCode 1
        versionName '1.0.0'
        multiDexEnabled true

        // API key used for testing.
        manifestPlaceholders = [fabric_api_key: '45063244ecb24aee8a3b252cb5c6a2c549cf91f9']

        externalNativeBuild {
            ndkBuild {
                targets '_ee_x_test'
                arguments 'APP_STL=c++_static'
                arguments 'NDK_TOOLCHAIN_VERSION=clang'
                arguments 'APP_PLATFORM=android-14'
                arguments 'APP_LDFLAGS=-latomic'
                arguments '-j' + Runtime.runtime.availableProcessors()
                cppFlags '-frtti'
                cppFlags '-fexceptions'
                cppFlags '-fsigned-char'
                cppFlags '-U__SSE__'
                cppFlags '-Wno-extern-c-compat'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include architectures
            universalApk false
        }
    }

    sourceSets {
        main {
            assets.srcDir '../../Resources'
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            jniDebuggable false

            externalNativeBuild {
                ndkBuild {
                    arguments "NDK_OUT=$projectDir/src/main/obj/release"
                    cppFlags '-DNDEBUG'
                }
            }
        }
        debug {
            debuggable true
            jniDebuggable true

            externalNativeBuild {
                ndkBuild {
                    arguments "NDK_OUT=$projectDir/src/main/obj/debug"
                    cppFlags '-DCOCOS2D_DEBUG=1'
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':libcocos2dx')
    implementation project(':ee-x-notification')
    implementation project(':ee-x-crashlytics')
    implementation project(':ee-x-google-analytics')
    implementation project(':ee-x-firebase')
    implementation project(':ee-x-ads')
    implementation project(':ee-x-admob')
    implementation project(':ee-x-applovin')
    implementation project(':ee-x-facebook-ads')
    implementation project(':ee-x-unity-ads')
    implementation project(':ee-x-vungle')
    implementation project(':ee-x-ironsource')

    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:multidex:1.0.2'

    implementation 'com.google.android.gms:play-services-base:11.8.0'
}

apply plugin: 'com.google.gms.google-services'
